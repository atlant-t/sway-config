# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

# xwayland disable
# Ok. I enabled the support for X
xwayland enable

### Variables

# Your preferred terminal emulator
set $term foot

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu fuzzel -b 000000cc -f SourceCodePro:size=12 -i Arc -w 40 -l 25 -T foot

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
#output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
output * bg ~/.config/wallpaper.png fill

#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input "1267:12350:ELAN1200:00_04F3:303E_Touchpad" {
    dwt enabled
    tap enabled
    natural_scroll disabled
    middle_emulation enabled
    accel_profile adaptive
    pointer_accel 0.5
}

input "type:keyboard" {
  xkb_layout "us,ru"
  # Since there is no suitable option available for switching
  # between keyboard layouts in xkb, so this is controlled manually
  # in the Key Bindings section.
}

exec --no-startup-id dbus-update-activation-environment --all
#exec --no-startup-id /usr/libexec/xdg-desktop-portal-wlr -r
exec /usr/libexec/flatpak-portal -r
exec /usr/libexec/xdg-desktop-portal-gtk -r
exec /usr/libexec/xdg-desktop-portal-wlr -r
exec gentoo-pipewire-launcher

### Key bindings
#
# Basics:
#
    # Keyboard layout switching
    # Mod4+Menu
    bindcode Mod4+135 input "type:keyboard" xkb_switch_layout next

    # Start a terminal
    # Mod4+Return
    bindcode Mod4+36 exec $term

    # Kill focused window
    # Mod4+Shift+q
    bindcode Mod4+Shift+24 kill

    # Start your launcher
    # Mod4 + d
    bindcode Mod4+40 exec $menu

    # Drag floating windows by holding down Mod4 and left mouse button.
    # Resize them with right mouse button + Mod4.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier Mod4 normal

    # Reload the configuration file
    # Mod4+Shift+c
    bindcode Mod4+Shift+54 reload

    # Exit sway (logs you out of your Wayland session)
    # Mod4+Shift+e
    bindcode Mod4+Shift+26 exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym Mod4+Left focus left
    bindsym Mod4+Down focus down
    bindsym Mod4+Up focus up
    bindsym Mod4+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym Mod4+Shift+Left move left
    bindsym Mod4+Shift+Down move down
    bindsym Mod4+Shift+Up move up
    bindsym Mod4+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym Mod4+1 workspace number 1
    bindsym Mod4+2 workspace number 2
    bindsym Mod4+3 workspace number 3
    bindsym Mod4+4 workspace number 4
    bindsym Mod4+5 workspace number 5
    bindsym Mod4+6 workspace number 6
    bindsym Mod4+7 workspace number 7
    bindsym Mod4+8 workspace number 8
    bindsym Mod4+9 workspace number 9
    bindsym Mod4+0 workspace number 10
    # Move focused container to workspace
    bindsym Mod4+Shift+1 move container to workspace number 1
    bindsym Mod4+Shift+2 move container to workspace number 2
    bindsym Mod4+Shift+3 move container to workspace number 3
    bindsym Mod4+Shift+4 move container to workspace number 4
    bindsym Mod4+Shift+5 move container to workspace number 5
    bindsym Mod4+Shift+6 move container to workspace number 6
    bindsym Mod4+Shift+7 move container to workspace number 7
    bindsym Mod4+Shift+8 move container to workspace number 8
    bindsym Mod4+Shift+9 move container to workspace number 9
    bindsym Mod4+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

#
# Screen capture
#
    set $ps1 Print
    set $ps2 Control+Print
    set $ps3 Alt+Print
    set $ps4 Alt+Control+Print
    set $psf $(xdg-user-dir PICTURES)/ps_$(date +"%Y%m%d%H%M%S").png
 
    bindsym $ps1 exec grim - | wl-copy
    bindsym $ps2 exec grim -g "$(slurp)" - | wl-copy
    #bindsym $ps3 exec grim $psf
    #bindsym $ps4 exec grim -g "$(slurp)" $psf

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # Mod4+b or Mod4+v, for horizontal and vertical splits
    # respectively.
    bindcode Mod4+56 splith
    bindcode Mod4+55 splitv

    # Switch the current container between different layout styles
    # Mod4+s stacking
    # Mod4+w tabbed
    # Mod4+e toggle split
    bindcode Mod4+39 layout stacking
    bindcode Mod4+25 layout tabbed
    bindcode Mod4+26 layout toggle split

    # Make the current focus fullscreen
    # Mod4+f
    bindcode Mod4+41 fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym Mod4+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym Mod4+space focus mode_toggle

    # Move focus to the parent container
    # Mod4+a
    bindcode Mod4+38 focus parent

    # Screenlock
    bindsym Mod4+Escape exec swaylock

    # Touchpadlock
    bindsym XF86TouchpadToggle input type:touchpad events toggle disabled enabled
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym Mod4+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym Mod4+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# Resize mode activation
# Mod4+r
bindcode Mod4+27 mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position bottom
    #mode hide
    hidden_state hide


    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    #status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done
    status_command exec /etc/sway/scripts/status

    separator_symbol " "

    colors {
        statusline #ffffff

        #background #323232
        background #32323288
        inactive_workspace #32323288 #323232aa #ffffff
    }
}

#
# Appearance
#

    # Theme

    #set $gnome-schema org.gnome.desktop.interface
    #
    #exec_always {
    #    gsettings set $gnome-schema gtk-theme 'Kripton'
    #    gsettings set $gnome-schema icon-theme 'gnome'
    #    gsettings set $gnome-schema cursor-theme 'Kripton'
    #    #gsettings set $gnome-schema font-name 'Your font name'
    #}

    #default_border pixel 1
    #gaps inner 5
    #gaps outer 5

    # Specefy tabbed layout as default.
    workspace_layout tabbed

    # While the keybinding to lock corsor is implemented, it cannot to hide
    # the cursor itself, but it can be hidden when typing, which is what is used.
    # Anyway, it is just good option.
    #seat * hide_cursor when-typing enable
    # Unfortunately this solution calls usuues
    seat * hide_cursor 30000


include /etc/sway/config.d/*
